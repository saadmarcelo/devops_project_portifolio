name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Define version from Docker hub
        id: version
        run: |
          # Define a versão base e incrementa autormaticamente o patch (v1.0.x)
          BASE_VERSION="V1.0."
          IMAGE="saadmarcelo/api_python"

          # Autenticar e pegar token de acesso
          TOKEN=$(curl -s -H "Content-Type: application/json" \
            -X POST -d '{"username": "'"${{ secrets.DOCKERHUB_USERNAME }}"'", "password": "'"${{ secrets.DOCKERHUB_TOKEN }}"' }' \
            https://hub.docker.com/v2/users/login/ | jq -r .token)

          # Usar token para consultar as tags
          TAGS=$(curl -s -H "Authorization: JWT $TOKEN" \
            "https://hub.docker.com/v2/repositories/saadmarcelo/api_python/tags/?page_size=100" | jq -r '.results[].name')
                   TAGS=$(curl -s "https://hub.docker.com/v2/repositories/${IMAGE}/tags/?page_size=100" | jq -r '.results[].name')

          # Filtra tags que seguem o padrão v1.0.X
          LAST_VERSION=$(echo "$TAGS" | grep -oP '^v1\.0\.\d+$' | sed 's/v1\.0\.//' | sort -n | tail -1)

          # Se não encontrar nenhuma, começa do zero
          if [ -z "$LAST_VERSION" ]; then
            LAST_VERSION=0
          fi

          NEW_VERSION=$((LAST_VERSION + 1))
          NEW_TAG="${BASE_VERSION}${NEW_VERSION}"

          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "tag=${NEW_TAG}" >> $GITHUB_OUTPUT
      - name: Build the Docker image
        run: docker build . --file Dockerfile -t saadmarcelo/api_python:latest -t saadmarcelo/api_python:${{ env.NEW_TAG }}

      - name: Push Docker Image
        run: |
          docker push saadmarcelo/api_python:latest
          docker push saadmarcelo/api_python:${{ env.NEW_TAG }}
